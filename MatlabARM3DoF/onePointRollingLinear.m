% Calculates the A and B matrices which represent the linearization about a
% point in state space x with control input u
% States we care about are: thm, xo, yo, tho, and velocities
function [A, B] = onePointRollingLinear(x,u,params)
    if(length(x) > 8)
        x = x(5:end);
    end
    thm = x(1); thmd = x(2); 
    %xo = x(3); xod = x(4);
    %yo = x(5); yod = x(6); 
    tho = x(7); thod = x(8);
    xmdd = u(1); ymdd = u(2); thmdd = u(3);
    thc = params.objAngle;
    lc = params.lc; lm = params.lm; wm = params.wm;
    s1 = params.s1; g = params.g;
    A = zeros(8,8);
    B = zeros(8,3);
    A(1,2) = 1; A(3,4) = 1; A(5,6) = 1; A(7,8) = 1;
    A(3,1) = ((lm - s1)*cos(thm) + wm*sin(thm))*thmd;
    A(3,2) = -wm*cos(thm) + (lm - s1)*sin(thm);
    A(3,7) = -lc*cos(thc + tho)*thod;
    A(3,8) = -lc*sin(thc + tho);
    A(4,1) = ((7*wm*cos(thm) + 6*wm*cos(thm - 2*(thc + tho)) - ...
        (lm - s1)*(7*sin(thm) + 6*sin(thm - 2*(thc + tho))))*thmd^2 + ...
     ((lm - s1)*(7*cos(thm) + 6*cos(thm - 2*(thc + tho))) + ...
        wm*(7*sin(thm) + 6*sin(thm - 2*(thc + tho))))*thmdd)/13;
    A(4,2) = (2*((lm - s1)*(7*cos(thm) + 6*cos(thm - 2*(thc + tho))) + ...
       wm*(7*sin(thm) + 6*sin(thm - 2*(thc + tho))))*thmd)/13;
    A(4,7) = (-12*(wm*cos(thm - 2*(thc + tho)) + ...
        (-lm + s1)*sin(thm - 2*(thc + tho)))* ...
        thmd^2 + 13*lc*sin(thc + tho)*thod^2 + ...
        12*(-(((lm - s1)*cos(thm - 2*(thc + tho)) + ...
        wm*sin(thm - 2*(thc + tho)))*thmdd) - ...
        sin(2*(thc + tho))*xmdd + cos(2*(thc + tho))*(g + ymdd)))/13;
    A(4,8) = -2*lc*cos(thc+tho)*thod;
    A(5,1) = -(wm*cos(thm) + (s1 - lm)*sin(thm))*thmd;
    A(5,2) = (s1 - lm)*cos(thm) - wm*sin(thm);
    A(5,7) = -lc*sin(thc+tho)*thod;
    A(5,8) = lc*cos(thc+tho);
    A(6,1) = (((lm - s1)*(7*cos(thm) - 6*cos(thm - 2*(thc + tho))) + ...
        wm*(7*sin(thm) - 6*sin(thm - 2*(thc + tho))))* ...
        thmd^2 + (-7*wm*cos(thm) + 6*wm*cos(thm - 2*(thc + tho)) + ...
        (lm - s1)*(7*sin(thm) - 6*sin(thm - 2*(thc + tho))))* ...
        thmdd)/13;
    A(6,2) = (2*(-7*wm*cos(thm) + 6*wm*cos(thm - 2*(thc + tho)) + ...
        (lm - s1)*(7*sin(thm) - 6*sin(thm - 2*(thc + tho))))* ...
        thmd)/13;
    A(6,7) = (12*((lm - s1)*cos(thm - 2*(thc + tho)) + ...
        wm*sin(thm - 2*(thc + tho)))*thmd^2 ...
        - 13*lc*cos(thc + tho)*thod^2 + ...
        12*(-((wm*cos(thm - 2*(thc + tho)) + ...
        (-lm + s1)*sin(thm - 2*(thc + tho)))*thmdd) + ...
        cos(2*(thc + tho))*xmdd + sin(2*(thc + tho))*(g + ymdd)))/13;
    A(6,8) = -2*lc*sin(thc+tho)*thod;
    A(8,1) = (12*(((-lm + s1)*cos(thc - thm + tho) + ...
        wm*sin(thc - thm + tho))*thmd^2 + (wm*cos(thc - thm + tho) + ...
        (lm - s1)*sin(thc - thm + tho))*thmdd))/(13*lc);
    A(8,2) = (24*(wm*cos(thc-thm+tho) + ...
        (lm-s1)*sin(thc-thm+tho))*thmd)/(13*lc);
    A(8,7) = (12*(((lm - s1)*cos(thc - thm + tho) - ...
        wm*sin(thc - thm + tho))*thmd^2 - ...
        (wm*cos(thc - thm + tho) + (lm - s1)*sin(thc - thm + tho))*thmdd + ...
        cos(thc + tho)*xmdd + sin(thc + tho)*(g + ymdd)))/(13*lc);
   
    B(2,3) = 1;
    B(4,1) = (7 + 6*cos(2*(thc + tho)))/13;
    B(4,2) = 6*sin(2*(thc+tho))/13;
    B(4,3) = (-7*wm*cos(thm) - 6*wm*cos(thm - 2*(thc + tho)) + ...
     (lm - s1)*(7*sin(thm) + 6*sin(thm - 2*(thc + tho))))/13;
    B(6,1) = 6*sin(2*(thc+tho))/13;
    B(6,2) = (7 - 6*cos(2*(thc+tho)))/13;
    B(6,3) = (-((lm - s1)*(7*cos(thm) - 6*cos(thm - 2*(thc + tho)))) - ...
     7*wm*sin(thm) + 6*wm*sin(thm - 2*(thc + tho)))/13;
    B(8,1) = 12*sin(thc+tho)/(13*lc);
    B(8,2) = -12*cos(thc+tho)/(13*lc);
    B(8,3) = -12*((s1-lm)*cos(thc-thm+tho) + wm*sin(thc-thm+tho))/(13*lc);
end